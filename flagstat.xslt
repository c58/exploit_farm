<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns="http://www.w3.org/1999/xhtml">
	<xsl:output method="xml" indent="yes" doctype-public="-//W3C//DTD XHTML 1.0 Strict//EN" doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"/>
	<xsl:template match="/">
		<html>
		<head>
			<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
			<title>Flags statistics</title>
			<link rel="stylesheet" type="text/css" href="flagstat.css"/>
			<script type="text/javascript" src="Chart.min.js"></script>
			<script type="text/javascript">
				var colors = [
					"47,79,47", "255,127,0", "56,176,222",
					"255,0,0", "0,255,0", "0,0,255",
					"0,255,255", "255,0,255", "255,255,0",
				];
				var i = 0;
				function nextStrokeColor() { return "rgba(" + colors[i++%colors.length] + ",1)"; }
				myOpts = {
					animation: false,
					animationSteps: 30,
					bezierCurve: false,
					pointDotRadius: 2,
					scaleOverride: true,
					scaleSteps: 20,
					scaleStepWidth: 10,
					scaleStartValue: 0,
					scaleGridLineColor: "rgba(0,0,0,0.2)",
					barValueSpacing: 4,
					barDatasetSpacing: 0,
				}
			</script>
		</head>
		<body>
			<h2>Flags mined through space and time</h2>
			<canvas id="roundChart" width="400" height="600"></canvas>
			<script type="text/javascript">
				var data = {
					labels: [
						<xsl:for-each select="/ctf/teams/team">
							"<xsl:value-of select="@name"/>",
						</xsl:for-each>
					],
					datasets: [{
						fillColor: "rgba(151,187,205,0.6)",
						strokeColor: "rgba(151,187,205,1)",
						data: [
						<xsl:for-each select="/ctf/teams/team">
							<xsl:variable name="name" select="@name"/>
							<xsl:value-of select="sum(/ctf/rounds/round/flags[@team=$name]/@amount)"/>,
						</xsl:for-each>
						]
					}]
				};
				var ctx = document.getElementById('roundChart').getContext('2d');
				var roundChart = new Chart(ctx).Bar(data, myOpts);
			</script>
			<canvas id="serviceChart" width="400" height="600"></canvas>
			<script type="text/javascript">
				var data = {
					labels: [
						<xsl:for-each select="/ctf/services/service">
							"<xsl:value-of select="@name"/>",
						</xsl:for-each>
					],
					datasets: [{
						fillColor: "rgba(151,187,205,0.6)",
						strokeColor: "rgba(151,187,205,1)",
						data: [
						<xsl:for-each select="/ctf/services/service">
							<xsl:variable name="name" select="@name"/>
							<xsl:value-of select="sum(/ctf/rounds/round/flags[@service=$name]/@amount)"/>,
						</xsl:for-each>
						]
					}]
				};
				var ctx = document.getElementById('serviceChart').getContext('2d');
				var serviceChart = new Chart(ctx).Bar(data, myOpts);
			</script>
			<canvas id="roundsChart" width="450" height="600"></canvas>
			<script type="text/javascript">
				var data = {
					labels: [
						<xsl:for-each select="/ctf/rounds/round">
							"R<xsl:value-of select="@number"/>",
						</xsl:for-each>
					],
					datasets: [{
						fillColor: "rgba(151,187,205,0.6)",
						strokeColor: "rgba(151,187,205,1)",
						data: [
						<xsl:for-each select="/ctf/rounds/round">
							<xsl:variable name="num" select="@number"/>
							<xsl:value-of select="sum(/ctf/rounds/round[@number=$num]/flags/@amount)"/>,
						</xsl:for-each>
						]
					}]
				};
				var ctx = document.getElementById('roundsChart').getContext('2d');
				var roundsChart = new Chart(ctx).Line(data, myOpts);
			</script>
			<canvas id="roundServiceChart" width="1250" height="600"></canvas>
			<div id="legend">
				<xsl:for-each select="/ctf/services/service">
					<xsl:variable name="service" select="@name"/>
					<div>
						<xsl:attribute name="id">
							<xsl:value-of select="$service"/>
						</xsl:attribute>
						<div class="colorDiv"></div>
						<xsl:value-of select="$service"/>
						<script type="text/javascript">
							var colorDiv = document.getElementById("<xsl:value-of select="$service"/>").getElementsByClassName('colorDiv')[0];
							colorDiv.style.backgroundColor = nextStrokeColor();
						</script>
					</div>
				</xsl:for-each>
			</div>
			<script type="text/javascript">
				i = 0;
				var data = {
					labels: [
						<xsl:for-each select="/ctf/rounds/round">
							"Round #<xsl:value-of select="@number"/>",
						</xsl:for-each>
					],
					datasets: [
						<xsl:for-each select="/ctf/services/service">
						<xsl:variable name="service" select="@name"/>
						{
							fillColor: "rgba(0,0,0,0)",
							strokeColor: nextStrokeColor(),
							data: [
							<xsl:for-each select="/ctf/rounds/round">
								<xsl:variable name="num" select="@number"/>
								<xsl:value-of select="sum(/ctf/rounds/round[@number &lt;= $num]/flags[@service=$service]/@amount)"/>,
							</xsl:for-each>
							]
						},
						</xsl:for-each>
					]
				};
				var ctx = document.getElementById('roundServiceChart').getContext('2d');
				var roundServiceChart = new Chart(ctx).Line(data, myOpts);
			</script>
		</body>
		</html>
	</xsl:template>
</xsl:stylesheet>